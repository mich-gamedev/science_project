[gd_scene load_steps=4 format=3 uid="uid://bnxw1lvlow4qf"]

[ext_resource type="Script" uid="uid://c840d1akcwcpg" path="res://scenes/variables.gd" id="1_7ll3j"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_u5dis"]
bg_color = Color(0.117647, 0.117647, 0.180392, 1)
border_width_left = 3
border_width_top = 8
border_width_right = 3
border_width_bottom = 3
border_color = Color(0.705882, 0.745098, 0.996078, 1)
corner_radius_top_left = 2
corner_radius_top_right = 2
corner_radius_bottom_right = 2
corner_radius_bottom_left = 2
anti_aliasing = false

[sub_resource type="StyleBoxLine" id="StyleBoxLine_u5dis"]
color = Color(0.270588, 0.278431, 0.352941, 1)
grow_begin = 0.0
grow_end = 0.0

[node name="Node2D" type="Node2D" node_paths=PackedStringArray("label")]
script = ExtResource("1_7ll3j")
list = PackedStringArray("games are mainly smoke in mirrors, don\'t use complex equations if not needed! get creative :]\n\nin this case, we can just rotate the direction variable we had before by some amount, causing it to come in at an angle rather than directly towards us. godot has another function for this, [color=#8bd5ca]Vector2[/color].[color=#7dc4e4]rotated[/color](angle)", "games are mainly smoke in mirrors, don\'t use complex equations if not needed! get creative :]\n\nin this case, we can just rotate the direction variable we had before by some amount, causing it to come in at an angle rather than directly towards us. godot has another function for this, [color=#8bd5ca]Vector2[/color].[color=#7dc4e4]rotated[/color](angle)\n\n[color=#ee99a0]var[/color] direction = position.[color=#7dc4e4]direction_to[/color](player.[color=#b7bdf8]position[/color])\n[color=#b7bdf8]direction[/color] = [color=#b7bdf8]direction[/color].[color=#7dc4e4]rotated[/color](80)\n[color=#b7bdf8]velocity[/color] = [color=#b7bdf8]direction[/color] * 120", "games are mainly smoke in mirrors, don\'t use complex equations if not needed! get creative :]\n\nin this case, we can just rotate the direction variable we had before by some amount, causing it to come in at an angle rather than directly towards us. godot has another function for this, [color=#8bd5ca]Vector2[/color].[color=#7dc4e4]rotated[/color](angle)\n\n[color=#ee99a0]var[/color] direction = position.[color=#7dc4e4]direction_to[/color](player.[color=#b7bdf8]position[/color])\n[color=#b7bdf8]direction[/color] = [color=#b7bdf8]direction[/color].[color=#7dc4e4]rotated[/color](80)\n[color=#b7bdf8]velocity[/color] = [color=#b7bdf8]direction[/color] * 120\n\nthis results in...")
label = NodePath("Panel/MarginContainer/VBoxContainer/RichTextLabel2")

[node name="Panel" type="Panel" parent="."]
z_index = -100
offset_left = 29.0
offset_top = 24.0
offset_right = 611.0
offset_bottom = 331.0
theme_override_styles/panel = SubResource("StyleBoxFlat_u5dis")

[node name="MarginContainer" type="MarginContainer" parent="Panel"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/margin_left = 5
theme_override_constants/margin_top = 10
theme_override_constants/margin_right = 5
theme_override_constants/margin_bottom = 5

[node name="VBoxContainer" type="VBoxContainer" parent="Panel/MarginContainer"]
layout_mode = 2
theme_override_constants/separation = 0

[node name="RichTextLabel" type="RichTextLabel" parent="Panel/MarginContainer/VBoxContainer"]
layout_mode = 2
theme_override_colors/default_color = Color(0.803922, 0.839216, 0.956863, 1)
theme_override_font_sizes/normal_font_size = 16
bbcode_enabled = true
text = "[color=#6c7086]4.[/color] making the enemy drift"
fit_content = true
autowrap_mode = 0

[node name="HSeparator" type="HSeparator" parent="Panel/MarginContainer/VBoxContainer"]
layout_mode = 2
theme_override_styles/separator = SubResource("StyleBoxLine_u5dis")

[node name="RichTextLabel2" type="RichTextLabel" parent="Panel/MarginContainer/VBoxContainer"]
layout_mode = 2
bbcode_enabled = true
text = "games are mainly smoke in mirrors, don't use complex equations if not needed! get creative :]

in this case, we can just rotate the direction variable we had before by some amount, causing it to come in at an angle rather than directly towards us. godot has another function for this, [color=#8bd5ca]Vector2[/color].[color=#7dc4e4]rotated[/color](angle)

[color=#ee99a0]var[/color] direction = position.[color=#7dc4e4]direction_to[/color](player.[color=#b7bdf8]position[/color])
[color=#b7bdf8]direction[/color] = [color=#b7bdf8]direction[/color].[color=#7dc4e4]rotated[/color](80)
[color=#b7bdf8]velocity[/color] = [color=#b7bdf8]direction[/color] * 120

this results in..."
fit_content = true

[node name="Control" type="Control" parent="Panel"]
anchors_preset = 0
offset_right = 40.0
offset_bottom = 40.0

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2(320, 180)
